process MProjectPP(s1, s2): (s3, s4) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mProjectPP"
  amqpCommand()
}

mProjectPPs = new MProjectPP()[6]
mProjectPPs[0].config.executor.args = ["-X", "-x", "0.90423", "2mass-atlas-001124n-j0880044.fits",
  "p2mass-atlas-001124n-j0880044.fits", "big_region_20150705_164350_21580.hdr"]
mProjectPPs[1].config.executor.args = ["-X", "-x", "0.90465", "2mass-atlas-001124n-j0880032.fits",
  "p2mass-atlas-001124n-j0880032.fits", "big_region_20150705_164350_21580.hdr"]
mProjectPPs[2].config.executor.args = ["-X", "-x", "0.90448", "2mass-atlas-001124n-j0870244.fits",
  "p2mass-atlas-001124n-j0870244.fits", "big_region_20150705_164350_21580.hdr"]
mProjectPPs[3].config.executor.args = ["-X", "-x", "0.90415", "2mass-atlas-001124n-j0870232.fits",
  "p2mass-atlas-001124n-j0870232.fits", "big_region_20150705_164350_21580.hdr"]
mProjectPPs[4].config.executor.args = ["-X", "-x", "0.90640", "2mass-atlas-001124n-j0860044.fits",
  "p2mass-atlas-001124n-j0860044.fits", "big_region_20150705_164350_21580.hdr"]
mProjectPPs[5].config.executor.args = ["-X", "-x", "0.90682", "2mass-atlas-001124n-j0860032.fits",
  "p2mass-atlas-001124n-j0860032.fits", "big_region_20150705_164350_21580.hdr"]

for (proc, idx <- mProjectPPs) {
  (ins[idx], inBigRegion) -> proc -> (atlases[idx], atlasAreas[idx])
}



process MDiffFit(s1, s2, s3, s4, s5, s6, s7): (s8, s9) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mDiffFit"
  amqpCommand()
}

mDiffFits = new MDiffFit()[9]
mDiffFits[0].config.executor.args = ["-s", "fit.000001.000002.txt", "p2mass-atlas-001124n-j0880044.fits",
  "p2mass-atlas-001124n-j0880032.fits", "diff.000001.000002.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[1].config.executor.args = ["-s", "fit.000001.000004.txt", "p2mass-atlas-001124n-j0880044.fits",
  "p2mass-atlas-001124n-j0870232.fits", "diff.000001.000004.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[2].config.executor.args = ["-s", "fit.000002.000003.txt", "p2mass-atlas-001124n-j0880032.fits",
  "p2mass-atlas-001124n-j0870244.fits", "diff.000002.000003.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[3].config.executor.args = ["-s", "fit.000002.000004.txt", "p2mass-atlas-001124n-j0880032.fits",
  "p2mass-atlas-001124n-j0870232.fits", "diff.000002.000004.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[4].config.executor.args = ["-s", "fit.000003.000004.txt", "p2mass-atlas-001124n-j0870244.fits",
  "p2mass-atlas-001124n-j0870232.fits", "diff.000003.000004.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[5].config.executor.args = ["-s", "fit.000003.000006.txt", "p2mass-atlas-001124n-j0870244.fits",
  "p2mass-atlas-001124n-j0860032.fits", "diff.000003.000006.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[6].config.executor.args = ["-s", "fit.000004.000005.txt", "p2mass-atlas-001124n-j0870232.fits",
  "p2mass-atlas-001124n-j0860044.fits", "diff.000004.000005.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[7].config.executor.args = ["-s", "fit.000004.000006.txt", "p2mass-atlas-001124n-j0870232.fits",
  "p2mass-atlas-001124n-j0860032.fits", "diff.000004.000006.fits", "big_region_20150705_164350_21580.hdr"]
mDiffFits[8].config.executor.args = ["-s", "fit.000005.000006.txt", "p2mass-atlas-001124n-j0860044.fits",
  "p2mass-atlas-001124n-j0860032.fits", "diff.000005.000006.fits", "big_region_20150705_164350_21580.hdr"]

for (proc, idx <- mDiffFits) {
  (mDiff, mFitplane, atlases[idx/2], atlasAreas[idx/2]) -> proc
}

// these connections are irregular so we can't do a for-loop over them
(atlases[1], atlasAreas[1]) -> mDiffFits[0]
(atlases[3], atlasAreas[3]) -> mDiffFits[1]
(atlases[2], atlasAreas[2]) -> mDiffFits[2]
(atlases[3], atlasAreas[3]) -> mDiffFits[3]
(atlases[3], atlasAreas[3]) -> mDiffFits[4]
(atlases[5], atlasAreas[5]) -> mDiffFits[5]
(atlases[4], atlasAreas[4]) -> mDiffFits[6]
(atlases[5], atlasAreas[5]) -> mDiffFits[7]
(atlases[5], atlasAreas[5]) -> mDiffFits[8]

for (proc, idx <- mDiffFits) {
  inBigRegion -> proc -> (fits[idx], diffs[idx])
}



process MConcatFit(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10): (s11) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mConcatFit"
  config.executor.args = ["statfile_20150705_164350_21580.tbl", "fits.tbl", "."]
  amqpCommand()
}

mConcatFit = new MConcatFit()
statfile -> mConcatFit -> allFits
for (sig <- fits) {
  sig -> mConcatFit
}



process MBgModel(s1, s2): (s3) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mBgModel"
  config.executor.args = ["-i", "100000", "pimages_20150705_164350_21580.tbl", "fits.tbl", "corrections.tbl"]
  amqpCommand()
}

(pimages, allFits) -> MBgModel -> corrections



process MBackground(s1, s2, s3, s4): (s5, s6) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mBackground"
  amqpCommand()
}

mBackgrounds = new MBackground()[6]
mBackgrounds[0].config.executor.args = ["-t", "p2mass-atlas-001124n-j0880044.fits",
  "c2mass-atlas-001124n-j0880044.fits", "pimages_20150705_164350_21580.tbl", "corrections.tbl"]
mBackgrounds[1].config.executor.args = ["-t", "p2mass-atlas-001124n-j0880032.fits",
  "c2mass-atlas-001124n-j0880032.fits", "pimages_20150705_164350_21580.tbl", "corrections.tbl"]
mBackgrounds[2].config.executor.args = ["-t", "p2mass-atlas-001124n-j0870244.fits",
  "c2mass-atlas-001124n-j0870244.fits", "pimages_20150705_164350_21580.tbl", "corrections.tbl"]
mBackgrounds[3].config.executor.args = ["-t", "p2mass-atlas-001124n-j0870232.fits",
  "c2mass-atlas-001124n-j0870232.fits", "pimages_20150705_164350_21580.tbl", "corrections.tbl"]
mBackgrounds[4].config.executor.args = ["-t", "p2mass-atlas-001124n-j0860044.fits",
  "c2mass-atlas-001124n-j0860044.fits", "pimages_20150705_164350_21580.tbl", "corrections.tbl"]
mBackgrounds[5].config.executor.args = ["-t", "p2mass-atlas-001124n-j0860032.fits",
  "c2mass-atlas-001124n-j0860032.fits", "pimages_20150705_164350_21580.tbl", "corrections.tbl"]

for (proc, idx <- mBackgrounds) {
  (atlases[idx], atlasAreas[idx], pimages, corrections) -> proc -> (masses[idx], massAreas[idx])
}



process MImgtbl(s1, s2, s3, s4, s5, s6, s7): (s8) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mImgtbl"
  config.executor.args = ["-t", "cimages_20150705_164350_21580.tbl", ".", "newcimages.tbl"]
  amqpCommand()
}

mImgtbl = new MImgtbl()
cimages -> mImgtbl -> newcimages
for (sig <- masses) {
  sig -> mImgtbl
}



process MAdd(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14): (s15, s16) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mAdd"
  config.executor.args = ["-e", "newcimages.tbl", "region_20150705_164350_21580.hdr", "mosaic_20150705_164350_21580.fits"]
  amqpCommand()
}

mAdd = new MAdd()
(newcimages, region) -> mAdd -> (mosaic, mosaicArea)
for (sig, idx <- masses) {
  (sig, massAreas[idx]) -> mAdd
}



process MShrink(s1): (s2) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mShrink"
  config.executor.args = ["mosaic_20150705_164350_21580.fits", "shrunken_20150705_164350_21580.fits", "1"]
  amqpCommand()
}

mosaic -> MShrink -> shrunken



process MJPEG(s1): (s2) {
  executor = "syscommand"
  firingLimit = 1
  config.executor.executable = "mJPEG"
  config.executor.args = ["-ct", "1", "-gray", "shrunken_20150705_164350_21580.fits",
    "min", "max", "gaussianlog", "-out", "shrunken_20150705_164350_21580.jpg"]
  amqpCommand()
}

shrunken -> MJPEG -> shrunkenJpg



(ins[0], inBigRegion, ins[1], ins[2], ins[3], ins[4], ins[5], mDiff, mFitplane, statfile, pimages, cimages, region) -> workflow
for (sig <- diffs) {
  workflow -> sig
}
workflow -> (mosaicArea, shrunkenJpg)
